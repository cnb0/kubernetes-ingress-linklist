name: pipeline

on:
  push:
    branches: [ master ]
    tags: [ "*" ]
  pull_request:
    branches: [ master ]

env:
  GO111MODULE: on

jobs:
  lint:
    name: Go Lint
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - uses: actions/checkout@v2
      - name: Lint Go Code
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go get -u golang.org/x/lint/golint 
          golint -set_exit_status $(go list ./... | grep -v /vendor/)
          
  build:
    name: Build
    needs: lint
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/setup-go@v1
      with:
        go-version: 1.13
    - uses: actions/checkout@v2 
    - name: Get dependencies   
      run: GO111MODULE=$GO111MODULE go mod vendor
    - name: Go Build
      run: |
        mkdir bin
        GO111MODULE=$GO111MODULE CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o bin/kubernetes-ingress-linklist -mod vendor src/cmd/kubernetes-ingress-linklist/main.go
    - name: Docker Build
      run: docker build . --file Dockerfile --tag ${{ github.repository }}
    - name: Log into registry
      run: echo "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" | docker login -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=${{ github.repository }}
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')  # Strip git ref prefix from version
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')  # Strip "v" prefix from tag name
        [ "$VERSION" == "master" ] && VERSION=latest  # Use Docker `latest` tag convention

        echo "IMAGE_ID=$IMAGE_ID"
        echo "VERSION=$VERSION"

        docker tag $IMAGE_ID $IMAGE_ID:$VERSION
        docker push $IMAGE_ID
     
